{"version":3,"file":"static/js/283.25c1f113.chunk.js","mappings":"8LAKA,MAAMA,EAAMC,EAAAA,GAAOC,GAAG;;;;;;;;;;;;;;;EAiBhBC,EAAeF,EAAAA,GAAOG,GAAG;;;;;;;;EAUzBC,EAAOJ,EAAAA,GAAOG,GAAG;;;;;;;;;;EAYjBE,EAAWL,EAAAA,GAAOG,GAAG;;;;;;;EASrBG,EAAUN,EAAAA,GAAOO,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAgClBC,EAAkBR,EAAAA,GAAOS,MAAM;;;;;;;;;;;;;;;;;;EAoB/BC,EAAaV,EAAAA,GAAOG,GAAG;;;;;;;;;;;;;;;;;;EAoBvBQ,EAAgBX,EAAAA,GAAOO,CAAC;;;;;;;;;;;;;;;;;;EAsG9B,QAlFA,WACE,MAAOK,EAAYC,IAAiBC,EAAAA,EAAAA,WAAS,IACtCC,EAAYC,IAAiBF,EAAAA,EAAAA,WAAS,IAE7CG,EAAAA,EAAAA,WAAU,KACR,MAAMC,EAAeA,KACnBL,EAAcM,OAAOC,QAAU,KAIjC,OADAD,OAAOE,iBAAiB,SAAUH,GAC3B,IAAMC,OAAOG,oBAAoB,SAAUJ,IACjD,IAEH,MAAMK,EAAkBC,IACtB,MAAMC,EAAUC,SAASC,eAAeH,GACnCC,GAMLA,EAAQG,eAAe,CACrBC,SAAU,SACVC,MAAO,UAGTd,GAAc,IAVZe,QAAQC,MAAM,qBAAsBR,IAalCS,EAAkBT,IACtBD,EAAeC,IAGXU,EAAW,CACf,CAAEC,GAAI,QAASC,MAAO,SACtB,CAAED,GAAI,aAAcC,MAAO,cAC3B,CAAED,GAAI,SAAUC,MAAO,UACvB,CAAED,GAAI,WAAYC,MAAO,YACzB,CAAED,GAAI,UAAWC,MAAO,YAG1B,OACEC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACzC,EAAG,CAAC0C,UAAW,aAAY7B,EAAa,WAAa,IAAK2B,UACzDF,EAAAA,EAAAA,MAACnC,EAAY,CAAAqC,SAAA,EACXC,EAAAA,EAAAA,KAACpC,EAAI,CAACsC,QAASA,IAAMnB,EAAe,UAAUgB,SAAC,eAE/CC,EAAAA,EAAAA,KAACnC,EAAQ,CAAAkC,SACNL,EAASS,IAAKC,IACbJ,EAAAA,EAAAA,KAAClC,EAAO,CAENoC,QAASA,IAAMT,EAAeW,EAAKT,IACnCM,UAAU,WAAUF,SAEnBK,EAAKR,OAJDQ,EAAKT,QAShBK,EAAAA,EAAAA,KAAChC,EAAe,CACdkC,QAASA,IAAM1B,GAAeD,GAC9B,aAAW,qBAAoBwB,UAE/BC,EAAAA,EAAAA,KAACK,EAAAA,EAAe,CAACC,KAAM/B,EAAagC,EAAAA,IAAUC,EAAAA,cAKpDR,EAAAA,EAAAA,KAAC9B,EAAU,CAAC+B,UAAW1B,EAAa,OAAS,GAAGwB,SAC7CL,EAASS,IAAKC,IACbJ,EAAAA,EAAAA,KAAC7B,EAAa,CAEZ+B,QAASA,IAAMT,EAAeW,EAAKT,IAAII,SAEtCK,EAAKR,OAHDQ,EAAKT,SAStB,C","sources":["components/Navigation.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBars, faTimes } from '@fortawesome/free-solid-svg-icons';\n\nconst Nav = styled.nav`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  z-index: 1000;\n  background: rgba(255, 255, 255, 0.1);\n  backdrop-filter: blur(10px);\n  border-bottom: 1px solid rgba(255, 255, 255, 0.2);\n  transition: all 0.4s ease;\n  \n  &.scrolled {\n    background: rgba(255, 255, 255, 0.15);\n    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);\n  }\n`;\n\nconst NavContainer = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 0 20px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  height: 70px;\n`;\n\nconst Logo = styled.div`\n  font-size: 1.5rem;\n  font-weight: 700;\n  color: white;\n  cursor: pointer;\n  transition: all 0.4s ease;\n  \n  &:hover {\n    transform: scale(1.05);\n  }\n`;\n\nconst NavLinks = styled.div`\n  display: flex;\n  gap: 2rem;\n  \n  @media (max-width: 768px) {\n    display: none;\n  }\n`;\n\nconst NavLink = styled.a`\n  color: white;\n  text-decoration: none;\n  font-weight: 500;\n  position: relative;\n  padding: 0.5rem 0;\n  transition: all 0.4s ease;\n  \n  &:hover {\n    color: #ffd700;\n  }\n  \n  &::after {\n    content: '';\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    width: 0;\n    height: 2px;\n    background: #ffd700;\n    transition: width 0.4s ease;\n  }\n  \n  &:hover::after {\n    width: 100%;\n  }\n  \n  &.active::after {\n    width: 100%;\n  }\n`;\n\nconst HamburgerButton = styled.button`\n  display: none;\n  background: none;\n  border: none;\n  color: white;\n  font-size: 1.5rem;\n  cursor: pointer;\n  padding: 8px;\n  border-radius: 5px;\n  transition: all 0.3s ease;\n  \n  @media (max-width: 768px) {\n    display: block;\n  }\n  \n  &:hover {\n    color: #ffd700;\n  }\n`;\n\nconst MobileMenu = styled.div`\n  position: fixed;\n  top: 70px;\n  left: 0;\n  right: 0;\n  background: rgba(0, 0, 0, 0.95);\n  backdrop-filter: blur(10px);\n  transform: translateY(-100%);\n  transition: transform 0.3s ease;\n  z-index: 999;\n  \n  &.open {\n    transform: translateY(0);\n  }\n  \n  @media (min-width: 769px) {\n    display: none;\n  }\n`;\n\nconst MobileNavLink = styled.a`\n  display: block;\n  color: white;\n  text-decoration: none;\n  font-weight: 500;\n  padding: 1rem 2rem;\n  border-bottom: 1px solid rgba(255, 255, 255, 0.1);\n  transition: all 0.3s ease;\n  cursor: pointer;\n  \n  &:hover {\n    background: rgba(255, 215, 0, 0.1);\n    color: #ffd700;\n  }\n  \n  &:last-child {\n    border-bottom: none;\n  }\n`;\n\nfunction Navigation() {\n  const [isScrolled, setIsScrolled] = useState(false);\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n\n  useEffect(() => {\n    const handleScroll = () => {\n      setIsScrolled(window.scrollY > 50);\n    };\n\n    window.addEventListener('scroll', handleScroll);\n    return () => window.removeEventListener('scroll', handleScroll);\n  }, []);\n\n  const smoothScrollTo = (sectionId) => {\n    const element = document.getElementById(sectionId);\n    if (!element) {\n      console.error('Section not found:', sectionId);\n      return;\n    }\n\n    // Use native smooth scrolling for better reliability\n    element.scrollIntoView({ \n      behavior: 'smooth', \n      block: 'start' \n    });\n    \n    setIsMenuOpen(false);\n  };\n\n  const handleNavClick = (sectionId) => {\n    smoothScrollTo(sectionId);\n  };\n\n  const navItems = [\n    { id: 'about', label: 'About' },\n    { id: 'experience', label: 'Experience' },\n    { id: 'skills', label: 'Skills' },\n    { id: 'projects', label: 'Projects' },\n    { id: 'contact', label: 'Contact' }\n  ];\n\n  return (\n    <>\n      <Nav className={`nav-item ${isScrolled ? 'scrolled' : ''}`}>\n        <NavContainer>\n          <Logo onClick={() => smoothScrollTo('header')}>Portfolio</Logo>\n          \n          <NavLinks>\n            {navItems.map((item) => (\n              <NavLink\n                key={item.id}\n                onClick={() => handleNavClick(item.id)}\n                className=\"nav-item\"\n              >\n                {item.label}\n              </NavLink>\n            ))}\n          </NavLinks>\n          \n          <HamburgerButton\n            onClick={() => setIsMenuOpen(!isMenuOpen)}\n            aria-label=\"Toggle mobile menu\"\n          >\n            <FontAwesomeIcon icon={isMenuOpen ? faTimes : faBars} />\n          </HamburgerButton>\n        </NavContainer>\n      </Nav>\n      \n      <MobileMenu className={isMenuOpen ? 'open' : ''}>\n        {navItems.map((item) => (\n          <MobileNavLink\n            key={item.id}\n            onClick={() => handleNavClick(item.id)}\n          >\n            {item.label}\n          </MobileNavLink>\n        ))}\n      </MobileMenu>\n    </>\n  );\n}\n\nexport default Navigation; "],"names":["Nav","styled","nav","NavContainer","div","Logo","NavLinks","NavLink","a","HamburgerButton","button","MobileMenu","MobileNavLink","isScrolled","setIsScrolled","useState","isMenuOpen","setIsMenuOpen","useEffect","handleScroll","window","scrollY","addEventListener","removeEventListener","smoothScrollTo","sectionId","element","document","getElementById","scrollIntoView","behavior","block","console","error","handleNavClick","navItems","id","label","_jsxs","_Fragment","children","_jsx","className","onClick","map","item","FontAwesomeIcon","icon","faTimes","faBars"],"sourceRoot":""}